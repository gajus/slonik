jobs:
  lint:
    runs-on: ubuntu-latest
    environment: release
    name: Lint
    steps:
      - name: setup repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"
          cache: "npm"
      - run: npm ci
      - run: npm run lint
    timeout-minutes: 10
  build:
    runs-on: ubuntu-latest
    environment: release
    name: Build
    steps:
      - name: setup repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"
          cache: "npm"
      - run: npm ci
      - run: npm run build
    timeout-minutes: 10
  test:
    env:
      TEST_ONLY_NON_INTEGRATION: 'true'
    runs-on: ubuntu-latest
    environment: release
    name: Test
    steps:
      - name: setup repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"
          cache: "npm"
      - run: npm ci
      - run: npm run test
    timeout-minutes: 10
  test-pg-integration:
    env:
      TEST_ONLY_PG_INTEGRATION: 'true'
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    environment: release
    name: Test "pg" integration
    steps:
      - name: setup repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"
          cache: "npm"
      - run: npm ci
      - run: npm run test
        env:
          POSTGRES_DSN: postgres:postgres@localhost:5432
    timeout-minutes: 10
  test-postgres-integration:
    env:
      TEST_ONLY_POSTGRES_INTEGRATION: 'true'
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    environment: release
    name: Test "postgres" integration
    steps:
      - name: setup repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"
          cache: "npm"
      - run: npm ci
      - run: npm run test
        env:
          POSTGRES_DSN: postgres:postgres@localhost:5432
    timeout-minutes: 10
name: Test and build
on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - ".editorconfig"
      - ".husky/**"
      - ".lintstagedrc.js"
      - ".mergify.yml"
      - ".nvmrc"
      - "README.md"
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
